var _user$project$Asset$cylinders = F6(
	function (scaleX, scaleY, scaleZ, x, z, num) {
		return A2(
			_user$project$AFrame_Primitives$cylinder,
			{
				ctor: '::',
				_0: A3(_user$project$AFrame_Primitives_Attributes$position, x, (scaleY / 2) + 0.5, z),
				_1: {
					ctor: '::',
					_0: A3(_user$project$AFrame_Primitives_Attributes$scale, scaleX, scaleY, scaleZ),
					_1: {
						ctor: '::',
						_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$orange),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id(
								_elm_lang$core$Basics$toString(num)),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Asset$spheres = F6(
	function (scaleX, scaleY, scaleZ, x, z, num) {
		return A2(
			_user$project$AFrame_Primitives$sphere,
			{
				ctor: '::',
				_0: A3(_user$project$AFrame_Primitives_Attributes$position, x, (scaleY / 2) + 0.5, z),
				_1: {
					ctor: '::',
					_0: A3(_user$project$AFrame_Primitives_Attributes$scale, scaleX, scaleY, scaleZ),
					_1: {
						ctor: '::',
						_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$red),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id(
								_elm_lang$core$Basics$toString(num)),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Asset$cubes = F6(
	function (scaleX, scaleY, scaleZ, x, z, num) {
		return A2(
			_user$project$AFrame_Primitives$box,
			{
				ctor: '::',
				_0: A3(_user$project$AFrame_Primitives_Attributes$position, x, (scaleY / 2) + 0.5, z),
				_1: {
					ctor: '::',
					_0: A3(_user$project$AFrame_Primitives_Attributes$scale, scaleX, scaleY, scaleZ),
					_1: {
						ctor: '::',
						_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$orange),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id(
								_elm_lang$core$Basics$toString(num)),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Asset$tables = F6(
	function (scaleX, scaleY, scaleZ, x, z, num) {
		return A2(
			_user$project$AFrame_Primitives$box,
			{
				ctor: '::',
				_0: A3(_user$project$AFrame_Primitives_Attributes$position, x, (scaleY / 2) + 0.5, z),
				_1: {
					ctor: '::',
					_0: A3(_user$project$AFrame_Primitives_Attributes$scale, scaleX * 1.5, scaleY, scaleZ * 1.5),
					_1: {
						ctor: '::',
						_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$orange),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id(
								_elm_lang$core$Basics$toString(num)),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Asset$chairs = F6(
	function (scaleX, scaleY, scaleZ, x, z, num) {
		return A2(
			_user$project$AFrame_Primitives$box,
			{
				ctor: '::',
				_0: A3(_user$project$AFrame_Primitives_Attributes$position, x, (scaleY / 2) + 0.5, z),
				_1: {
					ctor: '::',
					_0: A3(_user$project$AFrame_Primitives_Attributes$scale, scaleX * 0.5, scaleY, scaleZ * 0.5),
					_1: {
						ctor: '::',
						_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$red),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id(
								_elm_lang$core$Basics$toString(num)),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Asset$addAsset = F3(
	function (num, arr, message) {
		return A3(_elm_lang$core$Dict$insert, num, message, arr);
	});
