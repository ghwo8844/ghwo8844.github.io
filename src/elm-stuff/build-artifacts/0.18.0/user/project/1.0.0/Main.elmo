var _user$project$Main$height = 3.0;
var _user$project$Main$side = 30.0;
var _user$project$Main$view = function (model) {
	return A2(
		_user$project$AFrame$scene,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_user$project$AFrame_Primitives$assets,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_user$project$AFrame_Primitives$assetItem,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id('table'),
							_1: {
								ctor: '::',
								_0: _user$project$AFrame_Primitives_Attributes$src('../assets/table.obj'),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$CameraConfig$cam,
				_1: {
					ctor: '::',
					_0: A2(
						_user$project$AFrame$entity,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_user$project$AFrame_Primitives$box,
								{
									ctor: '::',
									_0: A3(_user$project$AFrame_Primitives_Attributes$position, 0, 0, 0),
									_1: {
										ctor: '::',
										_0: A3(_user$project$AFrame_Primitives_Attributes$scale, _user$project$Main$side, 0.1, _user$project$Main$side),
										_1: {
											ctor: '::',
											_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$ground),
											_1: {ctor: '[]'}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_user$project$AFrame_Primitives$box,
									{
										ctor: '::',
										_0: A3(_user$project$AFrame_Primitives_Attributes$position, _user$project$Main$side / 2, _user$project$Main$height / 2, 0),
										_1: {
											ctor: '::',
											_0: A3(_user$project$AFrame_Primitives_Attributes$scale, 0.1, _user$project$Main$height, _user$project$Main$side),
											_1: {
												ctor: '::',
												_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$ground),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_user$project$AFrame_Primitives$box,
										{
											ctor: '::',
											_0: A3(_user$project$AFrame_Primitives_Attributes$position, _user$project$Main$side / -2, _user$project$Main$height / 2, 0),
											_1: {
												ctor: '::',
												_0: A3(_user$project$AFrame_Primitives_Attributes$scale, 0.1, _user$project$Main$height, _user$project$Main$side),
												_1: {
													ctor: '::',
													_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$ground),
													_1: {ctor: '[]'}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_user$project$AFrame_Primitives$box,
											{
												ctor: '::',
												_0: A3(_user$project$AFrame_Primitives_Attributes$position, 0, _user$project$Main$height / 2, _user$project$Main$side / 2),
												_1: {
													ctor: '::',
													_0: A3(_user$project$AFrame_Primitives_Attributes$scale, _user$project$Main$side, _user$project$Main$height, 0.1),
													_1: {
														ctor: '::',
														_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$ground),
														_1: {ctor: '[]'}
													}
												}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_user$project$AFrame_Primitives$box,
												{
													ctor: '::',
													_0: A3(_user$project$AFrame_Primitives_Attributes$position, 0, _user$project$Main$height / 2, _user$project$Main$side / -2),
													_1: {
														ctor: '::',
														_0: A3(_user$project$AFrame_Primitives_Attributes$scale, _user$project$Main$side, _user$project$Main$height, 0.1),
														_1: {
															ctor: '::',
															_0: _user$project$AFrame_Primitives_Attributes$color(_user$project$ColorScheme$ground),
															_1: {ctor: '[]'}
														}
													}
												},
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$CameraConfig$bg,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		var _p1 = _p0._0;
		return ((_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$String$length(model.active),
			0) > 0) && _elm_lang$core$Native_Utils.eq(_p1, model.active)) ? {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{active: ''}),
			_1: _elm_lang$core$Platform_Cmd$none
		} : {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{active: _p1}),
			_1: _elm_lang$core$Platform_Cmd$none
		};
	});
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$Model = function (a) {
	return {active: a};
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: _user$project$Main$Model(''),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, subscriptions: _user$project$Main$subscriptions, update: _user$project$Main$update})();
var _user$project$Main$Click = function (a) {
	return {ctor: 'Click', _0: a};
};
